package login;

import javax.servlet.ServletException;
import sif.servlet.*;
import sif.html.*;

abstract public class AbstractAction[principal servP] extends Action[servP]
{
    /**
    *   Utility method to create a Table with class "banner" and containing the specified text.
    */
    protected Node[lbl, lbl]{lbl} createBanner{*lbl}(label{*lbl} lbl, String{*lbl} text)
    {
        return new Table[lbl, lbl]
        (
            "banner",
            lbl, lbl, lbl, lbl,
            new TRow[lbl, lbl]
            (
                lbl, lbl,
                new TCell[lbl, lbl]
                (
                    lbl, lbl,
                    new Header[lbl, lbl]
                    (
                        1, lbl, lbl,
                        new Text[lbl, lbl]
                        (
                            text
                        )
                    )
                )
            ), null
        );
    }

    /**
    *   Utility method to create a Table with class "sifbody" and containing the node.
	*       - Only able to do this if the information contained within the node is allowed to write to the html element
    */
    protected Node[cL, cE]{*cE} createBody{*cE}(label{*cE} cL, label{*cE} cE, Node[cL, cE]{*cE} body)
        where {*cE} <= {*cL}
    {
		return new Table[cL, cE]
		(
		    "sifbody",
			cL, cE, cL, cE,
		    new TRow[cL, cE]
		    (
		        cL, cE,
		        new TCell[cL, cE]
		        (
		            cL, cE, body
		        )
	        ),
		    null
		);
    }

    /**
    *   Method to return the request's default value if one exists
    *
    */
    public static String{*dataLbl; *lbl; req.session←} defaultValue{*lbl} (
                                                            label{*lbl} lbl,
                                                            label{*lbl} dataLbl,
                                                            HTMLRequest[servP]{*lbl} req,
                                                            String{*dataLbl; *lbl; req.session←} dataValue,
                                                            Input[servP]{*dataLbl; *lbl; req.session←} inp )
    {
        if (req == null) return null;
        String defaultValue = dataValue;

        // If there is input and it is either the same or less restrictive than the data's label
        if (inp != null && inp.inputLbl <= dataLbl)
        {
            String{*dataLbl; *lbl; req.session←} s = req.getParam(inp);
            if (s != null)
            {
                defaultValue = s;
            }
        }
        return defaultValue;
    }
}
