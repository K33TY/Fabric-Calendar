//package calendar.event;
//
//import fabric.lang.Object;
//import fabricated.util.List;
//import calendar.util.Date;
//
//public class Event[label L] //TODO: why? this ? extends Object
//{
//	long onum;
//    String name;
//    Date[L] startTime;
//    Date[L] endTime;
//    String note;
//    //UserPrincipal[] attendees;
//    //UserPrincipal[] viewers;
//    //UserPrincipal owner;
//    label lbl; // Store policies within the object
//
//    //label L = {_servletPrincipal→; _servletPrincipal←};
//
////	public OwnerEvent{L}
////	( // Constructor params
////		long {L} onum_,
////		String {L} name_,
////		//Date {L} startTime_,
////		//Date {L} endTime_,
////		String {L} note_,
////		//UserPrincipal {L}[]{L} attendees_,
////		//UserPrincipal {L}[]{L} viewers_,
////		//UserPrincipal {L} owner_,
////		label {L} ownerPolicy
////	)
////	//where L <= {} // probably need some rules here
////	{   // initialize event values
////		onum = onum_;
////		name = name_;
////		//startTime = startTime_;
////		//endTime = endTime_;
////		note = note_;
////		//attendees = attendees_;
////		//viewers = viewers_;
////		//owner = owner_;
////		lbl = ownerPolicy;
////	}
//
//	// Deep copy with user label
////	public OwnerEvent[lbl] {/*not sure what goes here*//*} getOwnerEvent(label lbl, Store s)
////		where lbl equiv lbl_, //is this allowed?
////		// TODO: more ensurance
////		//ensure caller is correct user?
////	{
////		return new OwnerEvent[lbl]@s( this.onum, this.name, this.startTime, this.endTime, this note, this.attendees,
////									  this.viewers, this.owner, this.lbl );
////	}
//}