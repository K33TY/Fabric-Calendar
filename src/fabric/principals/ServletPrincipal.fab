package fabric.principals;

import calendar.Config;
import fabric.util.Map;

//  Main principal who controls all actions on the calendar and is fully trusted by the single store
public class ServletPrincipal extends ExternalPrincipal
{
	public ServletPrincipal()
	{
		super("calendar");
	}


	public static ServletPrincipal{*!:} getInstance{*!:}()
	{
		atomic
		{
			FabricWorker w = FabricWorker.getWorker();
            if (w != null)
            {
                final Store store = w.getStore(Config.calendarStoreName); // One store at the moment
                if (store != null)
                {
                    Map rootMap = store.getRoot();

                    if (rootMap != null)
                    {
                        Object obj = rootMap.get(Config.calendarRootMapKey);
                        ServletPrincipal servP = null;

                        if (obj instanceof ServletPrincipal)
                        {
                            servP = (ServletPrincipal) obj;
                        }
                        else
                        {
                            servP = new ServletPrincipal@store();
                            rootMap.put(Config.calendarRootMapKey, servP);
                        }
                        return servP;
                    }
                }
            }
            return null;
		}
	}
}