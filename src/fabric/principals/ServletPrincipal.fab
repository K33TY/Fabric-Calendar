package fabric.principals;

import fabric.util.Map;
import calendar.Config;

/**
*   The Calendar servlet principal that essentially has rights to any writable objects for the Calendar
*   It is has the same rights as the top principal for confidentiality
*/
public class ServletPrincipal extends ExternalPrincipal
{
	public ServletPrincipal()
	{
		super("servlet");
	}

	public static ServletPrincipal{⊤←} getInstance{⊤←} ()
	{
		atomic
		{
			FabricWorker w = FabricWorker.getWorker();
			if (w != null)
			{
				final Store store = w.getStore(Config.calendarStoreName);
				if (store != null)
				{
					Map rootMap = store.getRoot();
					if (rootMap != null)
					{
						Object obj = rootMap.get(Config.calendarPrincipalMapKey);
						ServletPrincipal servletP = null;
						if (obj instanceof ServletPrincipal)
						{
							servletP = (ServletPrincipal) obj;
						}
						else
						{
							servletP = new ServletPrincipal@store();
							rootMap.put(Config.calendarPrincipalMapKey, servletP);
						}

						return servletP;
					}
				}

			}
			return null;
		}
	}

	public static ServletPrincipal{⊤←} getInstance{⊤←} (Store store)
	{
		return getInstance();
	}
}